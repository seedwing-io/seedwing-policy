pattern with-metadata<M> = {
  metadata?: M
}

pattern with-components<C> = {
  components?: list::all<C && with-components<C>>,
}

pattern with-pedigree<P> = {
  pedigree?: P
}

pattern with-ancestors<A> = {
  ancestors?: list::all<A>
}

pattern with-descendants<D> = {
  ancestors?: list::all<D>
}

pattern with-variants<V> = {
  variants?: list::all<V>
}

pattern with-supplier<S> = {
  supplier?: S,
}

pattern with-evidence<E> = {
  evidence?: E
}

pattern with-commits<C> = {
  variants?: list::all<C>
}

pattern with-patches<P> = {
  patches?: list::all<P>
}

pattern with-notes<N> = {
  notes?: list::all<N>
}

pattern with-services<S> = {
  services?: list::all<S>,
}

pattern with-tools<T> = {
  tools?: list::all<T>,
}

pattern with-authors<T> = {
  authors?: list::all<T>,
}

pattern with-individuals<I> = {
  individuals?: list::all<I>
}

pattern with-organizations<O> = {
  organizations?: list::all<O>,
}

pattern with-composition<C> = {
  composition?: list::all<C>,
}

pattern with-properties<P> = {
  properties?: list::all<P>
}

pattern with-vulnerabilities<V> = {
  vulnerabilities?: list::all<V>,
}

pattern with-ratings<R> = {
  ratings?: list::all<R>,
}

pattern with-advisories<A> = {
  advisories?: list::all<A>,
}

pattern with-hashes<H> = {
  hashes?: list::all<H>,
}

pattern with-external-references<E> = {
  externalReferences?: list::all<E>,
}

pattern with-contact<C> = {
  contact?: list::all<contact>,
}

pattern with-licenses<L> = {
  licenses?: list::all<L>,
}

pattern with-copyright<C> = {
  copyright?: list::all<C>
}

pattern with-dependencies<D> = {
  dependencies?: list::all<D>,
}

pattern with-release-notes<R> = {
  releaseNotes?: list::all<R>,
}

pattern with-data<D> = {
  data?: list::all<D>,
}

// --- core structures

pattern bom = {
  bomFormat: "CycloneDX",
  specVersion: "1.4",
  serialNumber?: string,
  version: integer,
}
&& with-metadata<metadata>
&& with-components<component>
&& with-services<service>
&& with-external-references<external-reference>
&& with-dependencies<dependency>
&& with-composition<composition>
&& with-vulnerabilities<vulnerability>

pattern metadata = {
  timestamp?: string,
} && with-tools<tool> && with-authors<contact>

pattern tool = {
  vendor?: string,
  name?: string,
  version?: string,
} && with-external-references<external-reference> && with-hashes<hash>

pattern service = {
  bom-ref?: string,
  provider?: organization,
  group?: string,
  name: string,
  version?: string,
  description?: string,
  endpoints?: list::all<string>,
  authenticated?: boolean,
  x-trust-boundary?: boolean,
  // signature?: signature
}
&& with-data<data>
&& with-external-references<external-reference>
&& with-services<service>
&& with-licenses<license>
&& with-release-notes<release-note>
&& with-properties<property>

pattern data = {
  flow: "inbound" || "outbound" || "bi-directional" || "unknown",
  classification: string,
}

pattern composition = {
  aggregate: "complete"
    || "incomplete"
    || "incomplete_first_party_only"
    || "incomplete_third_party_only"
    || "unknown"
    || "not_specified",
  assemblies?: list::all<string>,
  //signature?: signature
} && with-dependencies<dependency>

pattern hash =
    cyclonedx::hash::md5
    || cyclonedx::hash::sha-1
    || cyclonedx::hash::sha-256
    || cyclonedx::hash::sha-384
    || cyclonedx::hash::sha-512
    || cyclonedx::hash::sha3-256
    || cyclonedx::hash::sha3-384
    || cyclonedx::hash::sha3-512
    || {
      alg: "BLAKE2b-256" || "BLAKE2b-384" || "BLAKE2b-512" || "BLAKE3",
      content: string,
    }

pattern external-reference = {
  url: string,
  comment?: string,
  type:  "vcs"
      || "issue-tracker"
      || "website"
      || "advisories"
      || "bom"
      || "mailing-list"
      || "social"
      || "chat"
      || "documentation"
      || "support"
      || "distribution"
      || "license"
      || "build-meta"
      || "build-system"
      || "release-notes"
      || "other",
}
&& with-hashes<hash>

pattern contact = {
  name?: string,
  email?: string,
  phone?: string,
}

pattern component = {
  type: "application"
     || "framework"
     || "library"
     || "container"
     || "operating-system"
     || "device"
     || "firmware"
     || "file",

  mime-type?: string,
  bom-ref?: string,
  author?: string,
  publisher?: string,
  group?: string,
  name: string,
  version?: string,
  description?: string,
  scope?: "required" || "optional" || "excluded",
  copyright?: string,
  cpe?: string,
  purl?: string,
  swid?: iso::swid::tag,
  //signature?: signature,
}
&& with-supplier<supplier>
&& with-external-references<external-reference>
&& with-pedigree<pedigree>
&& with-components<component>
&& with-release-notes<release-note>
&& with-properties<property>
&& with-hashes<hash>
&& with-licenses<license>
&& with-evidence<evidence>


pattern pedigree = with-ancestors<component>
  && with-descendants<component>
  && with-variants<component>
  && with-commits<commit>
  && with-patches<patch>
  && with-notes<string>

pattern evidence = with-licenses<license> && with-copyright<copyright>

pattern dependency = {
  ref: string,
  dependsOn?: list::all<string>,
}

pattern vulnerability = {
  bom-ref?: string,
  id?: string,
  source?: source,
  references?: list::all< {
    id: string,
    source: source,
  } >,
  cwes?: list::all<integer>,
  description?: string,
  detail?: string,
  recommendation?: string,
  created?: string,
  published?: string,
  updated?: string,
  credits?: with-organizations<organization> && with-individuals<contact>,
  // analysis?:
  // affects?:
}
&& with-ratings<rating>
&& with-advisories<advisory>
&& with-tools<tool>
&& with-properties<property>


pattern rating = {
  source?: source,
  score?: decimal,
  severity?: "critical" || "high" || "medium" || "low" || "info" || "none" || "unknown",
  method?: "CVSSv2" || "CVSSv3" || "CVSSv31" || "OWASP" || "other",
  vector?: string,
  justification: string,
}

pattern advisory = {
  title?: string,
  url: string,
}

pattern release-note = {
  type: "major" || "minor" || "patch" || "pre-release" || "internal",
  title?: string,
  featuredImage?: string,
  socialImage?: string,
  description?: string,
  timestamp?: string,
  aliases?: list::all<string>,
  tags?: list::all<string>,
  resolves?: list::all<issue>,
  notes?: list::all<{
    locale?: string,
    text: text,
  }>,
}

pattern issue = {
  type: "defect" || "enhancement" || "security",
  id?: string,
  name?: string,
  descriptions?: string,
  source?: source,
  references?: list::all<string>,
}

pattern commit = {
  uid?: string,
  url?: string,
  author?: {
    timestamp?: string,
    name?: string,
    email?: string,
  },
  committer?: {
    timestamp?: string,
    name?: string,
    email?: string,
  },
  message?: string,
}

pattern patch = {
  type: "unofficial"
     || "monkey"
     || "backport"
     || "cherry-pick",
  diff?: {
    text?: text,
    url?: string,
  },
  resolves: list::all<issue>,
}

pattern text = {
  content-type?: string,
  encoding?: "base64",
  content: string,
}

pattern source = {
  name?: string,
  url?: string,
}

pattern organization = {
  name?: string,
  url?: string,
} && with-contact<contact>

pattern property = {
  name: string,
  value: string,
}

pattern license = {
  expression: string,
} || {
  license: {
    id: spdx::license::id,
    name?: string,
    text?: text,
    url?: string,
  }
}

pattern copyright = {
  text: string
}

pattern supplier = {
  name?: string,
  url?: string,
} && with-contact<contact>
