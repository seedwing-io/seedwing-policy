name: Containers

on:
  workflow_call:
    inputs:
      imageTag:
        description: The image tag
        required: true
        type: string
      platforms:
        description: The target platforms to build
        type: string
        required: true

  workflow_dispatch:
    inputs:
      imageTag:
        description: The image tag
        required: true
        type: string
        default: latest
      platforms:
        description: The target platforms to build (like `linux/amd64, linux/arm64`)
        required: true
        type: string
        default: "linux/amd64"

env:
  IMAGE_NAME: seedwing-policy-server
  IMAGE_TAG: ${{ inputs.imageTag }}

jobs:
  build-containers:

    permissions:
      contents: read
      packages: write
      id-token: write

    runs-on: ubuntu-22.04
    steps:

      - name: Log in to ghcr.io
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: "ghcr.io"

      - name: Install qemu dependency
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ env.IMAGE_TAG }}
          platforms: ${{ inputs.platforms }}
          containerfiles: |
            ./Dockerfile

      - name: Check images created
        run: buildah images | grep '${{ env.IMAGE_NAME }}'

      - name: Save image
        run: podman save --multi-image-archive ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} > image.tar

      - uses: actions/upload-artifact@v3
        with:
          name: container
          path: image.tar
          if-no-files-found: error

      - name: Install cosign
        uses: sigstore/cosign-installer@v2

      - name: Check cosign
        run: cosign version

      - name: Push to ghcr.io
        id: push-images
        run: |
          podman push \
            "${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}" \
            "ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}" \
            --digestfile "${RUNNER_TEMP}/push.digest"
          echo "imageDigest=$(cat ${RUNNER_TEMP}/push.digest)" >> $GITHUB_OUTPUT
          rm ${RUNNER_TEMP}/push.digest

      - name: Sign the images with GitHub OIDC Token
        env:
          COSIGN_EXPERIMENTAL: true
        run: |
          imageDigest="${{ steps.push-images.outputs.imageDigest }}"
          echo "Image Digest: ${imageDigest}"
          # and then construct the full (pushed) name
          cosign sign --yes --recursive "ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}@${imageDigest}"
